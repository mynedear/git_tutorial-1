	ROS Master จะทำหน้าที่เป็น server สำหรับให้ node หลายๆตัวเชื่อมต่อกัน และสามารถส่ง message หากันได้ คำสั่งที่ใช้รัน master คือ roscore เมื่อรัน master แล้ว เราก็สามารถที่จะสร้าง node ต่างๆขึ้นมาเพื่อดึงข้อมูลได้ การเชื่อมกันระหว่าง node จะส่งข้อความหากันผ่าน topic
	ROS Topics คือ publisher node จะ publish message ของตัวเองขึ้นไปที่ topic แล้วจะมี subscriber node มารอรับ message ที่ส่งมาทาง topic ที่มีชื่อเดียวกัน
	ROS Service  เป็น synchronous โดยจะมี service client กับ service server การทำงานก็คือ node ที่เป็น service client จะส่งไปหา node service server แล้ว node server ก็จะตอบคำตอบกลับไปที่ node client
ROS Topic และ ROS Service เป็นสองรูปแบบการสื่อสารที่ใช้ในระบบ ROS แต่มีลักษณะและวัตถุประสงค์ที่แตกต่างกันดังนี้:

ROS Topic:
- ROS Topic เป็นรูปแบบการสื่อสารแบบแผ่น (publish-subscribe) ที่ใช้สำหรับการแลกเปลี่ยนข้อมูลแบบไม่เชื่อมต่อ (asynchronous) ระหว่างโหนดในระบบ ROS.
- โหนดที่เผยแพร่ข้อมูล (publishing node) จะเผยแพร่ข้อมูลผ่านทาง Topic โดยระบุชื่อของ Topic ที่เป็นตัวรับข้อมูล (subscriber nodes) สามารถสมัครฟังได้เพื่อรับข้อมูลที่ถูกเผยแพร่.
- Topic สามารถใช้สื่อสารข้อมูลแบบหลายๆ โหนด (multi-peer) ซึ่งหมายถึงสามารถมีการเชื่อมต่อและส่งข้อมูลได้พร้อมกันจากหลายๆ โหนดพร้อมๆ กัน.

ROS Service:
- ROS Service เป็นรูปแบบการสื่อสารแบบสอบถาม-ตอบกลับ (request-response) ที่ใช้สำหรับการแลกเปลี่ยนข้อมูลระหว่างโหนดในระบบ ROS.
- โหนดที่ต้องการข้อมูลหรือการทำงาน (client node) จะส่งคำขอ (request) ผ่านทาง Service ไปยังโหนดที่ให้บริการ (service node) และรอรับการตอบกลับ (response).
- Service จะให้การสื่อสารแบบ synchronous คือโหนดที่ส่งคำขอจะรอรับข้อมูลหรือการทำงานจาก service node จนกว่าจะได้รับการตอบกลับจาก service node.

สรุป:
ROS Topic ใช้สำหรับการแลกเปลี่ยนข้อมูลแบบไม่เชื่อมต่อ (asynchronous) ระหว่างโหนดในระบบ ROS ซึ่งโหนดที่เผยแพร่ข้อมูลสามารถส่งข

้อมูลไปยังหลายๆ โหนดพร้อมๆ กันได้ ในขณะที่ ROS Service ใช้สำหรับการสอบถาม-ตอบกลับ (request-response) ระหว่างโหนดในระบบ ROS ซึ่งมีการสื่อสารแบบ synchronous และโหนดที่ต้องการข้อมูลหรือการทำงานจะรอรับการตอบกลับจาก service node ก่อนที่จะดำเนินการต่อไป